//We will use recursion in this and we will compare either first one is smaller or second if we got first one as smaller then
we will add it to the ans list and call the mergeTwolist again with (list1->next,list2) same as second one if any list got null first then  it will be added into the 
ans list 
1->2->4
1->3->4
op : 1->1->2->3->4->4;


class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL){
            return list2;
        }
        if(list2 == NULL){
            return list1;
        }

        ListNode* ans;
        if(list1->val < list2->val){
            ans = list1;
            ans->next = mergeTwoLists(list1->next,list2);
        }
        else{
            ans = list2;
            ans->next = mergeTwoLists(list1,list2->next);
        }
        return ans;

    }
};
